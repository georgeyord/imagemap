{"name":"imageMap - jQuery plugin","tagline":"Create an overlay image map with hover effects","body":"[imageMap - jQuery plugin](https://github.com/georgeyord/imagemap)\r\n================================\r\nCreate an overlay image map with hover effects\r\n--------------------------------\r\n\r\nThe **jQuery ImageMap** class adds elements (images) to the appropriate positions on the target element and executes some effect (default: resize with animation) when the mouse passes over (or click or any other event set) these elements.\r\n\r\n## Demostration\r\n\r\n## Demostration\r\n**[Basic usage](http://example.webwonder.gr/imagemap/example/example1.html)**\r\n*[source](https://github.com/georgeyord/imagemap/blob/master/example/example1.html)*\r\n\r\n**[Advanced usage](http://example.webwonder.gr/imagemap/example/example2.html)**\r\n*[source](https://github.com/georgeyord/imagemap/blob/master/example/example2.html)*\r\n\r\n**[Replace image](http://example.webwonder.gr/imagemap/example/example3.html)**\r\n*[source](https://github.com/georgeyord/imagemap/blob/master/example/example3.html)*\r\n\r\n**[Callback functionality](http://example.webwonder.gr/imagemap/example/example4.html)**\r\n*[source](https://github.com/georgeyord/imagemap/blob/master/example/example4.html)*\r\n\r\n## Getting Started\r\n\r\nInclude jQuery and the plugin on a page. Then select an element add the overlay:\r\n\r\n```html\r\n<script src=\"jquery.js\"></script>\r\n<script src=\"jquery.imagemap.js\"></script>\r\n<script>\r\n$('#example1').imageMap(\r\n{\r\n    elements: [\r\n        {\r\n            image: \"image1.png\",\r\n            position: { top: 20,  left: 30 },\r\n            size: { width: 50,  height: 100 }\r\n        },\r\n        {\r\n            image: \"image2.png\",\r\n            link: \"image2.htm\", // Make it an active link\r\n            position: { top: 50,  left: 70 },\r\n            size: { width: 50,  height: 100 }\r\n        },\r\n        {\r\n            image: \"image3.png\",\r\n            position: { top: 100,  left: 40 },\r\n            size: { width: 50,  height: 100 },\r\n            effect: {resize: {active: true, factor: 70} // Add custom effect configuration\r\n        }\r\n    ]\r\n});\r\n</script>\r\n```\r\n\r\n## Usage\r\n\r\n### Main config\r\nThe config object MUST contain the elements array. Element structure explained later.\r\nThere are also the following OPTIONAL attributes:\r\n- debug: if set true, extensive information is logged in console\r\n- preloadImages: if set true a very simple preloading process is performed\r\n- zIndex: set the zIndex when the effect is activated\r\n- event: override default activation/deactivation events and duration of animation events\r\n- effect: override the default values for the effects, explained in detail later\r\n- mainPrefix: override the default prefix for css \"mainPrefix\"\r\n- containerClass: override the default container class \"containerClass\"\r\n- imageClass: override the default image class \"imageClass\"\r\n- additionalImageClass: append more classes to imageClass mentioned above\r\n\r\n### Element structure\r\n- image: REQUIRED - path to image filename\r\n- position: REQUIRED - distance from top/left corner of the target element\r\n- size: REQUIRED - width/height of the initial image\r\n- link: OPTIONAL - if set the image will be an active link\r\n- effect: OPTIONAL override the default values for the effects, explained in detail later\r\n\r\n### Effect structure\r\nImageMap supports resize effect and styling through css rules. Each effect can be turned on/off by setting \"active\" attribute to true/false.  \r\n*Example to turn \"resize\" off and \"style\" on:* ```effect: {resize: {active: false}, style: {active: true}}```\r\n\r\n- **Resize** config can contain either a \"factor\" to the final size or the exact \"width\".  \r\n*Example with factor:* ```effect: {resize: {active: true, factor: 60}```  \r\n*Example with width:* ```effect: {resize: {active: true, width: 100}```\r\n\r\n- **Style** config can contain any css styling rules in css attribute.  \r\n*Example with css:* ```effect: {style: {active: true, css: {background: \"red\"}}```","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}